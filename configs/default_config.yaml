# OpenEvolve 默认配置
# 本文件包含所有可用的配置选项及其合理默认值
# 您可以将此作为自定义配置的模板

# 通用设置
max_iterations: 1000 # 最大进化迭代次数
checkpoint_interval: 50 # 每N次迭代保存检查点
log_level: "INFO" # 日志级别(DEBUG, INFO, WARNING, ERROR, CRITICAL)
log_dir: null # 日志自定义目录(默认: output_dir/logs)
random_seed: null # 随机种子(用于复现, null表示随机)

# 进化设置
diff_based_evolution: true # 使用基于差异的进化(true)或完全重写(false)
allow_full_rewrites: false # 即使在差异模式下也允许偶尔完全重写
max_code_length: 10000 # 允许的最大代码长度(字符数)

# LLM配置
llm:
  # 主模型(最常使用)
  primary_model: "gemini-2.0-flash-lite"
  primary_model_weight: 0.8 # 主模型采样权重

  # 辅助模型(用于偶尔的高质量生成)
  secondary_model: "gemini-2.0-flash"
  secondary_model_weight: 0.2 # 辅助模型采样权重

  # API配置
  api_base: "https://generativelanguage.googleapis.com/v1beta/openai/" # API基础URL(非OpenAI模型需修改)
  api_key: null # API密钥(默认为OPENAI_API_KEY环境变量)

  # 生成参数
  temperature: 0.7 # 生成温度(值越高越有创造性)
  top_p: 0.95 # Top-p采样参数
  max_tokens: 4096 # 最大生成token数

  # 请求参数
  timeout: 60 # API请求超时时间(秒)
  retries: 3 # 失败请求重试次数
  retry_delay: 5 # 重试间隔时间(秒)

# 提示配置
prompt:
  template_dir: null # 提示模板自定义目录
  system_message: "你是一位专家程序员,正在通过进化帮助改进程序."

  # 提示中包含的示例数量
  num_top_programs: 3 # 包含的顶级程序数量
  num_diverse_programs: 2 # 包含的多样化程序数量

  # 模板随机性
  use_template_stochasticity: true # 使用模板随机变化以增加多样性
  template_variations: # 模板部分的不同表达方式
    improvement_suggestion:
      - "以下是改进这段代码的方法:"
      - "我建议做以下改进:"
      - "我们可以通过以下方式增强这段代码:"

  # Note: meta-prompting features are not yet implemented

# 数据库配置
database:
  # 通用设置
  db_path: null # 数据库持久化路径(null表示仅内存)
  in_memory: true # 将数据库保留在内存中以加快访问速度

  # Evolutionary parameters
  population_size: 1000 # Maximum number of programs to keep in memory
  archive_size: 100 # Size of elite archive
  num_islands: 5 # Number of islands for island model (separate populations)

  # Island-based evolution parameters
  # Islands provide diversity by maintaining separate populations that evolve independently.
  # Migration periodically shares the best solutions between adjacent islands.
  migration_interval: 50 # Migrate between islands every N generations
  migration_rate: 0.1 # Fraction of top programs to migrate (0.1 = 10%)

  # Selection parameters
  elite_selection_ratio: 0.1 # Ratio of elite programs to select
  exploration_ratio: 0.2 # Ratio of exploration vs exploitation
  exploitation_ratio: 0.7 # Ratio of exploitation vs random selection
  # Note: diversity_metric is fixed to "edit_distance" (feature_based not implemented)

  # MAP-Elites的特征图维度
  feature_dimensions: # MAP-Elites特征图的维度
    - "score" # 性能分数
    - "complexity" # 代码复杂度(长度)
  feature_bins: 10 # 每个维度的分箱数量

# 评估器配置
evaluator:
  # 通用设置
  timeout: 300 # 最大评估时间(秒)
  max_retries: 3 # 评估的最大重试次数

  # Note: resource limits (memory_limit_mb, cpu_limit) are not yet implemented

  # 评估策略
  cascade_evaluation: true # 使用级联评估提前过滤不良解决方案
  cascade_thresholds: # 进入下一评估阶段的阈值
    - 0.5 # 第一阶段阈值
    - 0.75 # 第二阶段阈值
    - 0.9 # 第三阶段阈值

  # Parallel evaluation
  parallel_evaluations: 4 # Number of parallel evaluations
  # Note: distributed evaluation is not yet implemented

  # 基于LLM的反馈(实验性)
  use_llm_feedback: false # 使用LLM评估代码质量
  llm_feedback_weight: 0.1 # LLM反馈在最终分数中的权重
